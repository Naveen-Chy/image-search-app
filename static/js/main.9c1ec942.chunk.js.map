{"version":3,"sources":["components/ImageGrid.jsx","components/SearchPage.jsx","components/EditorPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["ImageGrid","_ref","images","navigate","React","createElement","Row","className","map","img","index","Col","key","xs","sm","md","lg","Card","Img","variant","src","previewURL","Body","Button","onClick","state","imageUrl","largeImageURL","SearchPage","query","setQuery","useState","setImages","useNavigate","Container","Form","onSubmit","e","preventDefault","async","res","axios","get","encodeURIComponent","data","hits","error","console","fetchImages","Control","type","placeholder","value","onChange","target","required","EditorPage","_location$state","canvasRef","useRef","useLocation","canvas","setCanvas","isImageLoaded","setIsImageLoaded","selectedObject","setSelectedObject","showAlert","setShowAlert","useEffect","newCanvas","fabric","Canvas","width","height","backgroundColor","on","handleKeyDown","deleteSelected","window","addEventListener","dispose","removeEventListener","Image","fromURL","scale","Math","min","set","scaleX","scaleY","left","top","originX","originY","selectable","setBackgroundImage","renderAll","crossOrigin","setTimeout","remove","discardActiveObject","Alert","onClose","dismissible","id","ref","style","border","maxWidth","addText","text","IText","fontSize","fill","fontFamily","fontWeight","stroke","strokeWidth","shadow","add","setActiveObject","enterEditing","selectAll","addRect","rect","Rect","disabled","download","link","document","dataURL","toDataURL","format","quality","multiplier","href","body","appendChild","click","removeChild","alert","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.9c1ec942.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card, Button } from 'react-bootstrap';\r\n\r\nconst ImageGrid = ({ images, navigate }) => {\r\n  return (\r\n    <Row className=\"mt-4\">\r\n      {images.map((img, index) => (\r\n        <Col key={index} xs={12} sm={6} md={4} lg={3} className=\"mb-4\">\r\n          <Card>\r\n            <Card.Img variant=\"top\" src={img.previewURL} />\r\n            <Card.Body>\r\n              <Button\r\n                variant=\"primary\"\r\n                onClick={() => navigate('/editor', { state: { imageUrl: img.largeImageURL } })}\r\n              >\r\n                Add Caption\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ImageGrid;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Container, Form, Row, Col } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ImageGrid from \"./ImageGrid\";\r\n\r\nconst SearchPage = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const fetchImages = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        `https://pixabay.com/api/?key=49738534-0b43193f7e3e7d12f7a47979f&q=${encodeURIComponent(\r\n          query\r\n        )}&image_type=photo&per_page=12`\r\n      );\r\n      setImages(res.data.hits);\r\n    } catch (error) {\r\n      console.error(\"Error fetching images:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    fetchImages();\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <Form onSubmit={handleSearch}>\r\n        <Row className=\"g-2 wid-800\">\r\n          <Col md={10}>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Search for images...\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              className=\"search-input\" required\r\n            />\r\n          </Col>\r\n          <Col md={2}>\r\n            <Button \r\n              type=\"submit\" \r\n              variant=\"primary\" \r\n              className=\"w-100 custom-search-btn\"\r\n            >\r\n              Search\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n\r\n      <ImageGrid images={images} navigate={navigate} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SearchPage;","import React, { useEffect, useRef, useState } from 'react';\r\nimport { fabric } from 'fabric';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Container, Button, Row, Col, Alert } from 'react-bootstrap';\r\n\r\nconst EditorPage = () => {\r\n  const canvasRef = useRef(null);\r\n  const location = useLocation();\r\n  const imageUrl = location.state?.imageUrl;\r\n  const [canvas, setCanvas] = useState(null);\r\n  const [isImageLoaded, setIsImageLoaded] = useState(false);\r\n  const [selectedObject, setSelectedObject] = useState(null);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const newCanvas = new fabric.Canvas('canvas', {\r\n      width: 750,\r\n      height: 500,\r\n      backgroundColor: '#f0f0f0'\r\n    });\r\n\r\n    newCanvas.on('object:selected', (e) => {\r\n      setSelectedObject(e.target);\r\n    });\r\n\r\n    newCanvas.on('selection:cleared', () => {\r\n      setSelectedObject(null);\r\n    });\r\n\r\n    setCanvas(newCanvas);\r\n\r\n    const handleKeyDown = (e) => {\r\n      if (e.key === 'Delete' && selectedObject) {\r\n        deleteSelected();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      newCanvas.dispose();\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [selectedObject]); \r\n\r\n  useEffect(() => {\r\n    if (canvas && imageUrl) {\r\n      setIsImageLoaded(false);\r\n      fabric.Image.fromURL(imageUrl, (img) => {\r\n        const scale = Math.min(\r\n          canvas.width / img.width,\r\n          canvas.height / img.height\r\n        );\r\n        img.set({\r\n          scaleX: scale,\r\n          scaleY: scale,\r\n          left: (canvas.width - img.width * scale) / 2,\r\n          top: (canvas.height - img.height * scale) / 2,\r\n          originX: 'left',\r\n          originY: 'top',\r\n          selectable: false // Prevent background image from being selected\r\n        });\r\n        \r\n        canvas.setBackgroundImage(img, () => {\r\n          canvas.renderAll();\r\n          setIsImageLoaded(true);\r\n        }, {\r\n          crossOrigin: 'anonymous'\r\n        });\r\n      }, {\r\n        crossOrigin: 'anonymous'\r\n      });\r\n    }\r\n  }, [canvas, imageUrl]);\r\n\r\n  const addText = () => {\r\n    if (!canvas) return;\r\n    const text = new fabric.IText('Double click to edit', {\r\n      left: 50,\r\n      top: 50,\r\n      fontSize: 20,\r\n      fill: '#fff',\r\n      fontFamily: 'Impact',\r\n      fontWeight: 'bold',\r\n      stroke: '#000',\r\n      strokeWidth: 1,\r\n      shadow: '5px 5px 10px rgba(0,0,0,0.5)'\r\n    });\r\n    canvas.add(text);\r\n    canvas.setActiveObject(text);\r\n    text.enterEditing();\r\n    text.selectAll();\r\n  };\r\n\r\n  const addRect = () => {\r\n    if (!canvas) return;\r\n    const rect = new fabric.Rect({\r\n      width: 100,\r\n      height: 100,\r\n      fill: 'rgba(255,0,0,0.5)',\r\n      left: 100,\r\n      top: 100,\r\n      stroke: '#000',\r\n      strokeWidth: 1\r\n    });\r\n    canvas.add(rect);\r\n    canvas.setActiveObject(rect);\r\n  };\r\n\r\n  const deleteSelected = () => {\r\n    if (!canvas || !selectedObject) {\r\n      setShowAlert(true);\r\n      setTimeout(() => setShowAlert(false), 2000);\r\n      return;\r\n    }\r\n    \r\n    canvas.remove(selectedObject);\r\n    setSelectedObject(null);\r\n    canvas.discardActiveObject().renderAll();\r\n  };\r\n\r\n  const download = () => {\r\n    if (!canvas || !isImageLoaded) {\r\n      alert('Please wait for the image to load completely');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      const link = document.createElement('a');\r\n      const dataURL = canvas.toDataURL({\r\n        format: 'png',\r\n        quality: 1.0,\r\n        multiplier: 2\r\n      });\r\n      \r\n      link.href = dataURL;\r\n      link.download = 'meme-image.png';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } catch (error) {\r\n      console.error('Error downloading image:', error);\r\n      alert('Error downloading image. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt-4\">\r\n      <h2 className=\"text-center mb-4\">Meme Editor</h2>\r\n      \r\n      {showAlert && (\r\n        <Alert variant=\"warning\" onClose={() => setShowAlert(false)} dismissible>\r\n          Please select an object to delete\r\n        </Alert>\r\n      )}\r\n      \r\n      <Row className='align-items-center pt-5'>\r\n        <Col md={8}>\r\n          <canvas \r\n            id=\"canvas\" \r\n            ref={canvasRef}\r\n            style={{ \r\n              border: '1px solid #ccc',\r\n              maxWidth: '100%',\r\n              height: 'auto'\r\n            }}\r\n          />\r\n        </Col>\r\n        <Col md={4}>\r\n          <Button variant=\"success\" className=\"mb-3 w-100\" onClick={addText}>\r\n            Add Text\r\n          </Button>\r\n          <Button variant=\"info\" className=\"mb-3 w-100\" onClick={addRect}>\r\n            Add Rectangle\r\n          </Button>\r\n          <Button \r\n            variant=\"danger\" \r\n            className=\"mb-3 w-100\" \r\n            onClick={deleteSelected}\r\n            disabled={!selectedObject}\r\n          >\r\n            Delete Selected (or press <strong>Del</strong> key)\r\n          </Button>\r\n          <Button \r\n            variant=\"dark\" \r\n            className=\"mb-3 w-100\" \r\n            onClick={download}\r\n            disabled={!isImageLoaded}\r\n          >\r\n            {isImageLoaded ? 'Download Image' : 'Loading Image...'}\r\n          </Button>\r\n          \r\n          <div className=\"mt-5\">\r\n            <h5>Instructions:</h5>\r\n            <ul>\r\n              <li><strong>Click</strong> on objects to select them</li>\r\n              <li><strong>Double-click</strong> text to edit</li>\r\n              <li><strong>Drag</strong> to move objects</li>\r\n              <li><strong>Select + Press \"Delete\" key</strong> to remove</li>\r\n            </ul>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EditorPage;","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport SearchPage from './components/SearchPage';\nimport EditorPage from './components/EditorPage';\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<SearchPage />} />\n        <Route path=\"/editor\" element={<EditorPage />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\nreportWebVitals();\n"],"sourceRoot":""}